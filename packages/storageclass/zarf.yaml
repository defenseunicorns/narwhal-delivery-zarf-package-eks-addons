kind: ZarfPackageConfig
metadata:
  name: storageclass
  description: Zarf package of EBS and EFS storage classes
  version: "###ZARF_PKG_TMPL_PACKAGE_VERSION######ZARF_PKG_TMPL_PACKAGE_TAG_SUFFIX###"
  source: https://github.com/defenseunicorns/narwhal-delivery-zarf-package-eks-addons

variables:
  - name: CLUSTER_NAME
    type: raw
    prompt: false
    default: ""
  - name: RECLAIM_POLICY
    type: raw
    prompt: false
    default: "Delete"
  - name: ALLOW_VOLUME_EXPANSION
    type: raw
    prompt: false
    default: "true"
  - name: VOLUME_BINDING_MODE
    type: raw
    prompt: false
    default: "WaitForFirstConsumer"
  - name: EFS_FILE_SYSTEM_ID
    type: raw
    prompt: false
    default: "123456"
  - name: EBS_EXTRA_PARAMETERS
    autoIndent: true
    default: ""

components:
  - name: fetch-staged-aws-ssm-vars
    required: false
    description: "Fetch staged json object from AWS SSM Parameter Store and extract values for zarf variables"
    actions:
      onDeploy:
        defaults:
          shell:
            linux: bash
            darwin: bash
        before:
          # get the cluster name
          - cmd: kubectl config current-context | awk -F'[:/]' '{print $NF}'
            setVariables:
              - name: CLUSTER_NAME
          - cmd: |
              aws ssm get-parameter --name "/${ZARF_VAR_CLUSTER_NAME}/StorageClass/efs/fileSystemId" --with-decryption --output json | jq -r '.Parameter.Value'
            setVariables:
              - name: EFS_FILE_SYSTEM_ID

  - name: ebs-storageclass
    required: false
    actions:
      onDeploy:
        defaults:
          shell:
            linux: bash
            darwin: bash
        before:
          - cmd: |
              # check if gp2 storage class exists and annotation of storageclass.kubernetes.io/is-default-class":"true", if so patch it to be false
              if ./uds zarf tools kubectl get storageclass gp2 -o jsonpath='{.metadata.annotations.storageclass\.kubernetes\.io/is-default-class}' | grep -q "true"; then
                ./uds zarf tools kubectl patch storageclass gp2 -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'
              fi
    manifests:
      - name: ebs-storageclass
        namespace: kube-system
        files:
          - "manifests/ebs-storageclass.yaml"

  - name: efs-storageclass
    required: false
    manifests:
      - name: efs-storageclass
        namespace: kube-system
        files:
          - "manifests/efs-storageclass.yaml"
